@model HCMPo.ViewModels.AttendanceListViewModel
@using HCMPo.Models // Required for AttendanceStatus enum

@{
    ViewData["Title"] = "Attendance Records";

    // Helper function to get CSS class based on status
    Func<AttendanceStatus, string> GetStatusClass = status =>
    {
        switch (status)
        {
            case AttendanceStatus.Absent: return "table-danger"; // Red
            case AttendanceStatus.Late: return "table-secondary"; // Gray
            case AttendanceStatus.EarlyDeparture: return "table-warning"; // Orange/Yellowish
            case AttendanceStatus.OnField: return "table-info"; // Blue/Info
            case AttendanceStatus.OnLeave: return "table-primary"; // Purple (using primary)
            case AttendanceStatus.Present: return "table-success"; // Green
            case AttendanceStatus.Holiday:
            case AttendanceStatus.Weekend: return "table-light"; // Light Gray
            default: return ""; // Default
        }
    };

    var request = ViewContext.HttpContext.Request;
    int? selectedStartYear = request.Query["ethStartYear"].Count > 0 ? int.Parse(request.Query["ethStartYear"]) : (ViewBag.SelectedStartYear as int?);
    int? selectedStartMonth = request.Query["ethStartMonth"].Count > 0 ? int.Parse(request.Query["ethStartMonth"]) : (ViewBag.SelectedStartMonth as int?);
    int? selectedStartDay = request.Query["ethStartDay"].Count > 0 ? int.Parse(request.Query["ethStartDay"]) : (ViewBag.SelectedStartDay as int?);
    int? selectedEndYear = request.Query["ethEndYear"].Count > 0 ? int.Parse(request.Query["ethEndYear"]) : (ViewBag.SelectedEndYear as int?);
    int? selectedEndMonth = request.Query["ethEndMonth"].Count > 0 ? int.Parse(request.Query["ethEndMonth"]) : (ViewBag.SelectedEndMonth as int?);
    int? selectedEndDay = request.Query["ethEndDay"].Count > 0 ? int.Parse(request.Query["ethEndDay"]) : (ViewBag.SelectedEndDay as int?);
    var etMonthNames = new[] { "መስከረም", "ጥቅምት", "ኅዳር", "ታኅሳስ", "ጥር", "የካቲት", "መጋቢት", "ሚያዝያ", "ግንቦት", "ሰኔ", "ሐምሌ", "ነሐሴ", "ጳጉሜን" };
}

<h1>Attendance Records</h1>

<div class="row mb-4">
    <div class="col-md-12">
        <div id="filterError" class="alert alert-danger d-none"></div>
        <form method="get" class="row g-3" id="attendanceFilterForm">
            <div class="col-md-3">
                <label class="form-label">Start Date (Ethiopian)</label>
                <div class="row g-1">
                    <div class="col-4">
                        <select class="form-select" id="ethStartYear" name="ethStartYear">
                            @for (int y = 2017; y <= 2030; y++)
                            {
                                var selected = selectedStartYear == y ? "selected" : "";
                                @:<option value="@y" @selected>@y</option>
                            }
                        </select>
                    </div>
                    <div class="col-4">
                        <select class="form-select" id="ethStartMonth" name="ethStartMonth">
                            @for (int m = 1; m <= 13; m++)
                            {
                                var selected = selectedStartMonth == m ? "selected" : "";
                                @:<option value="@m" @selected>@m - @etMonthNames[m-1]</option>
                            }
                        </select>
                    </div>
                    <div class="col-4">
                        <select class="form-select" id="ethStartDay" name="ethStartDay">
                            @for (int d = 1; d <= 30; d++)
                            {
                                var selected = selectedStartDay == d ? "selected" : "";
                                @:<option value="@d" @selected>@d</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <label class="form-label">End Date (Ethiopian)</label>
                <div class="row g-1">
                    <div class="col-4">
                        <select class="form-select" id="ethEndYear" name="ethEndYear">
                            @for (int y = 2017; y <= 2030; y++)
                            {
                                var selected = selectedEndYear == y ? "selected" : "";
                                @:<option value="@y" @selected>@y</option>
                            }
                        </select>
                    </div>
                    <div class="col-4">
                        <select class="form-select" id="ethEndMonth" name="ethEndMonth">
                            @for (int m = 1; m <= 13; m++)
                            {
                                var selected = selectedEndMonth == m ? "selected" : "";
                                @:<option value="@m" @selected>@m - @etMonthNames[m-1]</option>
                            }
                        </select>
                    </div>
                    <div class="col-4">
                        <select class="form-select" id="ethEndDay" name="ethEndDay">
                            @for (int d = 1; d <= 30; d++)
                            {
                                var selected = selectedEndDay == d ? "selected" : "";
                                @:<option value="@d" @selected>@d</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <label for="employeeId" class="form-label">Employee</label>
                <select class="form-select" id="employeeId" name="employeeId">
                    <option value="">All Employees</option>
                    @foreach (var employee in Model.Employees)
                    {
                        <option value="@employee.Value" selected="@(employee.Value == Model.EmployeeId)">@employee.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button type="submit" class="btn btn-primary me-2">Filter</button>
                <a asp-action="Index" class="btn btn-secondary">Clear</a>
            </div>
        </form>
    </div>
</div>

<div class="row mb-2">
    <div class="col-md-12">
        @{
            var ethStartYear = ViewBag.SelectedStartYear?.ToString();
            var ethStartMonth = ViewBag.SelectedStartMonth?.ToString();
            var ethStartDay = ViewBag.SelectedStartDay?.ToString();
            var ethEndYear = ViewBag.SelectedEndYear?.ToString();
            var ethEndMonth = ViewBag.SelectedEndMonth?.ToString();
            var ethEndDay = ViewBag.SelectedEndDay?.ToString();
            string ethiopianRange = "";
            if (!string.IsNullOrEmpty(ethStartYear) && !string.IsNullOrEmpty(ethStartMonth) && !string.IsNullOrEmpty(ethStartDay) &&
                !string.IsNullOrEmpty(ethEndYear) && !string.IsNullOrEmpty(ethEndMonth) && !string.IsNullOrEmpty(ethEndDay))
            {
                int startMonthNum = int.Parse(ethStartMonth);
                int endMonthNum = int.Parse(ethEndMonth);
                ethiopianRange = $"Ethiopian: {ethStartYear} {etMonthNames[startMonthNum-1]} {ethStartDay} - {ethEndYear} {etMonthNames[endMonthNum-1]} {ethEndDay}";
            }
            var gregorianRange = (Model.StartDate != null && Model.EndDate != null)
                ? $"Gregorian: {Model.StartDate:yyyy-MM-dd} - {Model.EndDate:yyyy-MM-dd}" : "";
        }
        @if (!string.IsNullOrEmpty(gregorianRange))
        {
            <span>@gregorianRange</span>
        }
        @if (!string.IsNullOrEmpty(ethiopianRange))
        {
            <div style="font-size: 0.95em; color: #555;">@ethiopianRange</div>
        }
    </div>
</div>

<p>
    <a asp-action="Create" class="btn btn-primary">Add Manual Entry</a>
</p>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="table-light">
            <tr>
                <th>Date</th>
                <th>Employee</th>
                <th>Morning Check-In(s)</th>
                <th>Afternoon Check-In(s)</th>
                <th>Evening Check-Out(s)</th>
                <th>Status</th>
                <th>Remark</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var slot in Model.DailyAttendanceSlots)
            {
                var rowClass = slot.Status == "Absent" ? "table-danger" : "";
                <tr class="@rowClass">
                    <td>
                        @{
                            var etDate = new HCMPo.Models.EthiopianCalendar(slot.Date);
                            var etDateStr = $"{etDate.Year}/{etDate.Month:D2}/{etDate.Day:D2}";
                        }
                        @etDateStr
                    </td>
                    <td>@slot.EmployeeName</td>
                    <td>
                        @if (slot.MorningCheckIns.Any())
                        {
                            @string.Join(", ", slot.MorningCheckIns.Select(t => t.ToString("HH:mm")))
                        }
                        else { <span class="text-danger">--</span> }
                    </td>
                    <td>
                        @if (slot.AfternoonCheckIns.Any())
                        {
                            @string.Join(", ", slot.AfternoonCheckIns.Select(t => t.ToString("HH:mm")))
                        }
                        else { <span class="text-danger">--</span> }
                    </td>
                    <td>
                        @if (slot.EveningCheckOuts.Any())
                        {
                            @string.Join(", ", slot.EveningCheckOuts.Select(t => t.ToString("HH:mm")))
                        }
                        else { <span class="text-danger">--</span> }
                    </td>
                    <td>
                        @slot.Status
                        @if (slot.Status == "Absent")
                        {
                            <span class="badge bg-danger ms-2">Absent</span>
                        }
                    </td>
                    <td>@slot.Remark</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@* Pagination *@
@if (Model.TotalCount > 0)
{
    var totalPages = (int)Math.Ceiling((double)Model.TotalCount / Model.PageSize);
    if (Model.TotalCount <= Model.PageSize)
    {
        totalPages = 1;
    }
    if (totalPages > 1)
    {
        var startPage = Math.Max(1, Model.PageNumber - 2);
        var endPage = Math.Min(totalPages, Model.PageNumber + 2);
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                    <a class="page-link" asp-action="Index" 
                       asp-route-startDate="@Model.StartDate?.ToString("yyyy-MM-dd")"
                       asp-route-endDate="@Model.EndDate?.ToString("yyyy-MM-dd")"
                       asp-route-employeeId="@Model.EmployeeId"
                       asp-route-pageNumber="@(Model.PageNumber - 1)">Previous</a>
                </li>
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" asp-action="Index"
                           asp-route-startDate="@Model.StartDate?.ToString("yyyy-MM-dd")"
                           asp-route-endDate="@Model.EndDate?.ToString("yyyy-MM-dd")"
                           asp-route-employeeId="@Model.EmployeeId"
                           asp-route-pageNumber="@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.PageNumber == totalPages ? "disabled" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-startDate="@Model.StartDate?.ToString("yyyy-MM-dd")"
                       asp-route-endDate="@Model.EndDate?.ToString("yyyy-MM-dd")"
                       asp-route-employeeId="@Model.EmployeeId"
                       asp-route-pageNumber="@(Model.PageNumber + 1)">Next</a>
                </li>
            </ul>
        </nav>
    }
    else
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item active"><span class="page-link">1</span></li>
            </ul>
        </nav>
    }
}

@if (!Model.Attendances.Any())
{
    <div class="alert alert-info">
        No attendance records found for the selected criteria.
    </div>
}

@* No specific styles needed as we are using Bootstrap table contextual classes *@

@section Scripts {
<script>
// Adjust day dropdown for 13th month (1-5 days)
function adjustEthiopianDayDropdown(monthSelector, daySelector) {
    var month = parseInt($(monthSelector).val(), 10);
    var maxDay = (month === 13) ? 5 : 30;
    var $day = $(daySelector);
    $day.empty();
    for (var d = 1; d <= maxDay; d++) {
        $day.append(`<option value="${d}">${d}</option>`);
    }
}

$('#ethStartMonth').on('change', function() {
    adjustEthiopianDayDropdown('#ethStartMonth', '#ethStartDay');
});
$('#ethEndMonth').on('change', function() {
    adjustEthiopianDayDropdown('#ethEndMonth', '#ethEndDay');
});

// Initialize day dropdowns on page load
$(function() {
    adjustEthiopianDayDropdown('#ethStartMonth', '#ethStartDay');
    adjustEthiopianDayDropdown('#ethEndMonth', '#ethEndDay');
});

// Validation for Ethiopian date range
function isValidEthiopianDateRange() {
    var sy = parseInt($('#ethStartYear').val(), 10);
    var sm = parseInt($('#ethStartMonth').val(), 10);
    var sd = parseInt($('#ethStartDay').val(), 10);
    var ey = parseInt($('#ethEndYear').val(), 10);
    var em = parseInt($('#ethEndMonth').val(), 10);
    var ed = parseInt($('#ethEndDay').val(), 10);
    if (isNaN(sy) || isNaN(sm) || isNaN(sd) || isNaN(ey) || isNaN(em) || isNaN(ed)) return true;
    if (ey < sy) return false;
    if (ey === sy && em < sm) return false;
    if (ey === sy && em === sm && ed < sd) return false;
    return true;
}
$('#attendanceFilterForm').on('submit', function(e) {
    if (!isValidEthiopianDateRange()) {
        e.preventDefault();
        $('#filterError').removeClass('d-none').text('End date cannot be less than start date.');
    } else {
        $('#filterError').addClass('d-none').text('');
    }
});
</script>
}
